<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://schemas.active-endpoints.com/appmodules/screenflow/2011/07/avosCommon.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.active-endpoints.com/appmodules/screenflow/2011/07/avosCommon.xsd">
    <!-- 
        Element that can be used to store any type of content.
        This element is used to wrap cache content (e.g. list of types / typesDiscovery)
        in the tentant aware catalog.
     -->
    <xs:element name="catalogContent">
	    <xs:complexType>
	         <xs:complexContent>
	             <xs:extension base="xs:anyType">
	                 <xs:anyAttribute namespace="##any" processContents="lax"/>
	             </xs:extension>
	         </xs:complexContent>
	    </xs:complexType>    
    </xs:element>
    
    <!-- Describes named value pairs where the value can be of any type -->
   <xs:complexType name="nameValueType">
      <!-- the value of the option is the contents of the option element. -->
      <xs:complexContent mixed="true">
         <xs:extension base="xs:anyType">
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:anyAttribute namespace="##any" processContents="lax"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
    
	  <xs:complexType name="optionsType">
        <xs:sequence>
           <xs:element maxOccurs="unbounded"
                     minOccurs="0"
                     name="option"
                     type="tns:optionType"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- Describes named value pairs option with a hide attribute -->
    <xs:complexType name="optionType">
      <xs:complexContent>
         <xs:extension base="tns:nameValueType">
            <xs:attribute name="hide" type="xs:boolean"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   
	  <!-- Describes an overview of entity in the host environment -->
	  <xs:complexType name="entityAbstractType">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="label" type="xs:string" use="optional"/>
        <xs:attribute name="labelPlural" type="xs:string" use="optional"/>
        <xs:attribute name="creatable" type="xs:boolean" use="optional"/>
        <xs:attribute name="updateable" type="xs:boolean" use="optional"/>
        <xs:attribute name="objectIdField" type="xs:string" use="optional"/>
        <xs:attribute name="fieldForDisplay" type="xs:string" use="optional"/>
        <xs:attribute name="source" type="xs:string" use="optional"/>
        <xs:attribute default="false"
                    name="isByCopy"
                    type="xs:boolean"
                    use="optional"/>
	    <xs:anyAttribute namespace="##any" processContents="lax"/>
	  </xs:complexType>
	
	  <xs:simpleType name="errorCodesEnum">
	     <xs:restriction base="xs:string">
	        <xs:enumeration value="ERR_GENERIC_FAULT"/>
	        <xs:enumeration value="ERR_AUTOMATED_STEP"/>
         <xs:enumeration value="ERR_ASSIGNMENT"/>
	        <xs:enumeration value="ERR_INVALID_DATA"/>
         <xs:enumeration value="ERR_INVALID_STEP_TYPE"/>
	        <xs:enumeration value="ERR_ENDLESS_LOOP"/>
	        <xs:enumeration value="ERR_INVALID_SESSION"/>
	        <xs:enumeration value="ERR_INVALID_HOST_CONTEXT"/>
	        <xs:enumeration value="ERR_READ_CONTEXT_DATA"/>
         <xs:enumeration value="ERR_NOT_AUTHORIZED"/>
	        <xs:enumeration value="ERR_SCREENFLOW_TERMINATED"/>
         <xs:enumeration value="ERR_GUIDE_MIGRATION"/>
         <xs:enumeration value="ERR_CALLPROCESS_STEP"/>
         <xs:enumeration value="ERR_SPI_RUNTIME_FAULT"/>
	     </xs:restriction>
    </xs:simpleType>
    
   <!-- this element is used to provide text for actions and options -->
   <xs:complexType name="text">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="lang" type="tns:language" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
   </xs:complexType>
   
   <!-- language code --> 
  <xs:simpleType name="language">
      <xs:restriction base="xs:string">
        <xs:length value="2"/>
      </xs:restriction>
  </xs:simpleType>
  
   <xs:simpleType name="uuid">
     <xs:restriction base="xs:string">
         <xs:length fixed="true" value="36"/>
         <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
     </xs:restriction>
   </xs:simpleType>  

   <!-- Allowed Status Message Type-->   
   <xs:simpleType name="TStatusMessageTypeType">
      <xs:restriction base="xs:string">
        <xs:enumeration value="DEBUG"/>
        <xs:enumeration value="INFO"/>
        <xs:enumeration value="WARNING"/>
        <xs:enumeration value="ERROR"/>
      </xs:restriction>
   </xs:simpleType>
    
   <xs:complexType name="TStatusMessageType">
      <xs:sequence>
         <xs:element name="message" type="xs:string"/>
      </xs:sequence>
      <xs:attribute name="type" type="tns:TStatusMessageTypeType" use="required"/>
      <xs:attribute name="code" type="xs:string" use="required"/>
   </xs:complexType>
  
   <xs:complexType name="TStatusMessageTypes">
      <xs:sequence>
         <xs:element maxOccurs="unbounded"
                     minOccurs="0"
                     name="statusMessage"
                     type="tns:TStatusMessageType"/>
      </xs:sequence>
   </xs:complexType>
   
   <xs:element name="statusMessage" type="tns:TStatusMessageType"/>

   <xs:element name="statusMessages" type="tns:TStatusMessageTypes"/>
   
</xs:schema>
