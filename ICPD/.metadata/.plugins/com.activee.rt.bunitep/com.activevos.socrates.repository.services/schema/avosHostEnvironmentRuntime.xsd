<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://schemas.active-endpoints.com/appmodules/screenflow/2011/06/avosHostEnvironment.xsd"
           xmlns:odisco="http://schemas.active-endpoints.com/appmodules/screenflow/2012/09/avosObjectDiscovery.xsd"
           xmlns:sf="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"
           elementFormDefault="qualified"
           targetNamespace="http://schemas.active-endpoints.com/appmodules/screenflow/2011/06/avosHostEnvironment.xsd">

   <xs:import namespace="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"
              schemaLocation="avosScreenflow.xsd"/> 
   <xs:import namespace="http://schemas.active-endpoints.com/appmodules/screenflow/2012/09/avosObjectDiscovery.xsd"
              schemaLocation="avosObjectDiscovery.xsd"/>
   
   <xs:include schemaLocation="avosHostEnvironmentModel.xsd"/>
   
   <!-- Discover lists of entities from the host environment -->
   <xs:element name="entityDiscoveryRequest">
      <xs:complexType>
         <xs:sequence>
            <xs:any minOccurs="0" namespace="##any"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="entityDiscoveryResponse" type="odisco:TEntityAbstractList"/>

   <!-- Discover a specific entity's detail from the host environment -->
   <xs:element name="entityDetailRequest">
      <xs:complexType>
         <xs:attribute name="name" type="xs:string"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="entityDetailResponse" type="tns:TEntityDetail"/>
   
   <!-- Discover lists of entities with details from the host environment -->
   <xs:element name="entityDetailListDiscoveryRequest">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="sourceName" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="entityDetailListDiscoveryResponse" type="tns:TEntityDetailList"/>
   
   <!-- Read a record from the host environment -->
   <xs:element name="readRequest">
       <xs:complexType>
          <xs:sequence>
             <xs:element minOccurs="1" ref="sf:hostContext"/>
             <xs:element minOccurs="0" ref="sf:runAsUser"/>
             <xs:element maxOccurs="unbounded"
                        minOccurs="1"
                        name="read"
                        type="tns:TRead"/>
          </xs:sequence>
       </xs:complexType>
   </xs:element>
   <xs:element name="readResponseWrapper">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:readResponse"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="readResponse" type="tns:TReadOutput"/>
   
   <!-- Update a record from the host environment -->
   <xs:element name="updateRequest">
       <xs:complexType>
          <xs:sequence>
             <xs:element minOccurs="1" ref="sf:hostContext"/>
             <xs:element minOccurs="0" ref="sf:runAsUser"/>
             <xs:element maxOccurs="unbounded"
                        minOccurs="1"
                        name="update"
                        type="tns:TUpdate"/>
          </xs:sequence>
       </xs:complexType>
   </xs:element>
   <xs:element name="updateResponse">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="sf:onRollback"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   
   <!-- Delete a record from the host environment -->
   <xs:element name="deleteRequest">
       <xs:complexType>
          <xs:sequence>
             <xs:element minOccurs="1" ref="sf:hostContext"/>
             <xs:element minOccurs="0" ref="sf:runAsUser"/>
             <xs:element maxOccurs="unbounded"
                        minOccurs="1"
                        name="delete"
                        type="tns:TDelete"/>
          </xs:sequence>
       </xs:complexType>
   </xs:element>
   <xs:element name="deleteResponse">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="sf:onRollback"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   
   <!-- Create a record from the host environment -->
   <xs:element name="createRequest">
       <xs:complexType>
          <xs:sequence>
             <xs:element minOccurs="1" ref="sf:hostContext"/>
             <xs:element minOccurs="0" ref="sf:runAsUser"/>
             <xs:element maxOccurs="unbounded"
                        minOccurs="1"
                        name="create"
                        type="tns:TCreate"/>
          </xs:sequence>
       </xs:complexType>
   </xs:element>
   <xs:element name="createResponseWrapper">
   	  <xs:complexType>
      	  <xs:sequence>
      		    <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:createResponse"/>
      	  </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="createResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="tns:TCreateOutput">
                    <xs:sequence>
                       <xs:element maxOccurs="unbounded" minOccurs="0" ref="sf:onRollback"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
   </xs:element>
   
    
    <!-- Query record(s) from the host environment -->
   <xs:element name="queryRequest">
       <xs:complexType>
          <xs:sequence>
             <xs:element minOccurs="1" ref="sf:hostContext"/>
             <xs:element minOccurs="0" ref="sf:runAsUser"/>
             <xs:element maxOccurs="unbounded"
                        minOccurs="1"
                        name="query"
                        type="tns:TQuery"/>
          </xs:sequence>
       </xs:complexType>
   </xs:element>
   <xs:element name="queryResponseWrapper">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:queryResponse"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="queryResponse" type="tns:TQueryOutput"/>
   
   <!-- faultResponse - generic fault reply message from a host environment runtime problem --> 
   <xs:element name="faultResponse">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="reason" type="xs:string"/>
            <xs:element minOccurs="0" ref="sf:invalidData"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>  
   
   <xs:element name="objectNotFoundResponse">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="reason" type="xs:string"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>  
   
   <!-- List of translations -->
   <xs:element name="translations" type="tns:TranslationsType"/>
   <xs:complexType name="TranslationsType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:translation"/>
        </xs:sequence>
   </xs:complexType>
   
   <xs:element name="translation" type="tns:TranslationType"/>
   <xs:complexType name="TranslationType">
        <xs:complexContent mixed="true">
            <xs:extension base="xs:anyType">
                <xs:attribute name="lang" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
   </xs:complexType>  
</xs:schema>
