--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

set nocount on

merge into [stg].[SSIS_BUDGET_BusinessUnitLookup] as Target
using (values
  ('REC','ATP','Austria','Austria (ATP)')
 ,('RPM','BED','Decra','Decra (BED)')
 ,('REE','CZP','Czech','Czech (CZP)')
 ,('REC','DEI','Germany','Germany (DEI)')
 ,('REC','DEV','Vedag','Vedag (DEV)')
 ,('REC','DEW','Wolfin','Wolfin (DEW)')
 ,('REN','DKT','Denmark','Denmark (DKT)')
 ,('REC','ELIM-C','ELIM - Central','ELIM Region Central (REC)')
 ,('REE','ELIM-E','ELIM - East','ELIM Region East (REE)')
 ,('REN','ELIM-N','ELIM - North','ELIM Region North (REN)')
 ,('RPM','ELIM-RPM','ELIM Plastic and Metal','ELIM Region Plastic and Metal (RPM)')
 ,('REW','ELIM-W','ELIM - West','ELIM Region West (REW)')
 ,('REN','FIT','Finland','Finland (FIT)')
 ,('REW','FRT','France','France (FRT)')
 ,('REW','GBP','UK','UK (GBP)')
 ,('REE','HUP','Hungary','Hungary (HUP)')
 ,('RPM','ISM','Synthetics','Synthetics (ISM)')
 ,('REW','NLT','Benelux','Benelux (NLT)')
 ,('REN','NOT','Norway','Norway (NOT)')
 ,('REE','PLT','Poland','Poland (PLT)')
 ,('REE','RUP','Russia','Russia (RUP)')
 ,('RPM','SEG','Wijo','Wijo (SEG)')
 ,('REN','SET','Sweden','Sweden (SET)')
 ,('RPM','SKF','Monarflex','Monarflex (SKF)')
 ,('REE','SKP','Slovakia','Slovakia (SKP)')
) as Source ([RegionCode],[SBU],[BusinessUnitName],[BusinessUnitLookup])
on (Target.[SBU] = Source.[SBU])
when matched and (
	nullif(Source.[RegionCode], Target.[RegionCode]) is not null or nullif(Target.[RegionCode], Source.[RegionCode]) is not null or 
	nullif(Source.[BusinessUnitName], Target.[BusinessUnitName]) is not null or nullif(Target.[BusinessUnitName], Source.[BusinessUnitName]) is not null or 
	nullif(Source.[BusinessUnitLookup], Target.[BusinessUnitLookup]) is not null or nullif(Target.[BusinessUnitLookup], Source.[BusinessUnitLookup]) is not null) then
 update set
  [RegionCode] = Source.[RegionCode], 
  [BusinessUnitName] = Source.[BusinessUnitName], 
  [BusinessUnitLookup] = Source.[BusinessUnitLookup]
when not matched by target then
 insert([RegionCode],[SBU],[BusinessUnitName],[BusinessUnitLookup])
 values(Source.[RegionCode],Source.[SBU],Source.[BusinessUnitName],Source.[BusinessUnitLookup])
when not matched by source then 
 delete
;
go
declare @mergeError int
 , @mergeCount int
select @mergeError = @@error, @mergeCount = @@rowcount
if @mergeError != 0
 begin
 print 'ERROR OCCURRED IN MERGE FOR [stg].[SSIS_BUDGET_BusinessUnitLookup]. Rows affected: ' + cast(@mergeCount as varchar(100)); -- SQL should always return zero rows affected
 end
else
 begin
 print '[stg].[SSIS_BUDGET_BusinessUnitLookup] rows affected by MERGE: ' + cast(@mergeCount as varchar(100));
 end
go

set nocount off
go
