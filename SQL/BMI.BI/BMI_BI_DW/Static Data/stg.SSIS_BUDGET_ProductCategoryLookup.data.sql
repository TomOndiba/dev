--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

set nocount on

merge into [stg].[SSIS_BUDGET_ProductCategoryLookup] as Target
using (values
  (1000,1001,'Bitumen membranes','',null,'Bitumen membranes',46258,90)
 ,(1000,1002,'Synthetic membranes - Polymeric (DEW)','',null,'Synthetic membranes, Polymeric',46260,80)
 ,(1000,1003,'Synthetic membranes - Monomeric','Synthetic membranes, Monomeric PVC',46290,'Synthetic Membranes, Monomeric & TPO',46259,80)
 ,(1000,1004,'Synthetic membranes - TPO','Synthetic membranes, TPO',46291,'Synthetic Membranes, Monomeric & TPO',46259,80)
 ,(1000,1005,'Liquid products','',null,'Liquid products',46261,90)
 ,(1000,1006,'Skylights & Smoke ventilation','',null,'Skylights & Smoke ventilation',46262,90)
 ,(1000,1007,'Thermal Insulation','',null,'Thermal Insulation',46263,90)
 ,(1000,1008,'Flat Roofing Accessories','',null,'Flat Roofing Accessories',46264,90)
 ,(2000,2001,'Shingles','',null,'Shingles',46298,90)
 ,(2000,2002,'Steel roof tiles (Decra)','',null,'Steel Roof Tiles (Decra)',46300,90)
 ,(2000,2003,'Steel roof accessories (Decra)','',null,'',null,0)
 ,(2000,2004,'Other Pitched Roof Products','',null,'Other Pitched Roof Products',46301,90)
 ,(3000,3001,'Underroofs','',null,'Underroofs',46318,90)
 ,(3000,3002,'Underroofs (SKF)','',null,'',null,0)
 ,(3000,3003,'Wall Barriers','',null,'Wall Barriers',46324,90)
 ,(3000,3004,'Wall Barriers (SKF)','',null,'',null,0)
 ,(3000,3005,'Below Ground','',null,'Below Ground',46329,90)
 ,(3000,3006,'Below Ground (SKF)','',null,'',null,0)
 ,(3000,3007,'Scaffold Sheeting & Tarpaulins (SKF)','',null,'Scaffold Sheeting & Tarpaulins',46336,70)
 ,(3000,3008,'Sound deadening','',null,'Sound deadening',46341,90)
 ,(4000,4001,'Civil eng. & structural waterproofing','',null,'Civil eng. & structural waterproofing',46347,90)
 ,(4000,4002,'Civil eng. & structural waterproofing (SKF)','',null,'',null,0)
 ,(4000,4003,'PMB','PMB',46354,'PMB and Road Emulsions',46353,80)
 ,(4000,4004,'Road Emulsions','Road Emulsions',46355,'PMB and Road Emulsions',46353,80)
 ,(5000,5001,'Other Products','',null,'',null,0)
 ,(6000,6001,'Installation Services','',null,'',null,0)
) as Source ([ProductCategoryGroupId],[ProductCategoryId],[ProductCategoryName],[QlikViewCategoryLevel4Name],[QlikViewCategoryLevel4Id],[QlikViewCategoryLevel3Name],[QlikViewCategoryLevel3Id],[MatchConfidence])
on (Target.[ProductCategoryId] = Source.[ProductCategoryId])
when matched and (
	nullif(Source.[ProductCategoryGroupId], Target.[ProductCategoryGroupId]) is not null or nullif(Target.[ProductCategoryGroupId], Source.[ProductCategoryGroupId]) is not null or 
	nullif(Source.[ProductCategoryName], Target.[ProductCategoryName]) is not null or nullif(Target.[ProductCategoryName], Source.[ProductCategoryName]) is not null or 
	nullif(Source.[QlikViewCategoryLevel4Name], Target.[QlikViewCategoryLevel4Name]) is not null or nullif(Target.[QlikViewCategoryLevel4Name], Source.[QlikViewCategoryLevel4Name]) is not null or 
	nullif(Source.[QlikViewCategoryLevel4Id], Target.[QlikViewCategoryLevel4Id]) is not null or nullif(Target.[QlikViewCategoryLevel4Id], Source.[QlikViewCategoryLevel4Id]) is not null or 
	nullif(Source.[QlikViewCategoryLevel3Name], Target.[QlikViewCategoryLevel3Name]) is not null or nullif(Target.[QlikViewCategoryLevel3Name], Source.[QlikViewCategoryLevel3Name]) is not null or 
	nullif(Source.[QlikViewCategoryLevel3Id], Target.[QlikViewCategoryLevel3Id]) is not null or nullif(Target.[QlikViewCategoryLevel3Id], Source.[QlikViewCategoryLevel3Id]) is not null or 
	nullif(Source.[MatchConfidence], Target.[MatchConfidence]) is not null or nullif(Target.[MatchConfidence], Source.[MatchConfidence]) is not null) then
 update set
  [ProductCategoryGroupId] = Source.[ProductCategoryGroupId], 
  [ProductCategoryName] = Source.[ProductCategoryName], 
  [QlikViewCategoryLevel4Name] = Source.[QlikViewCategoryLevel4Name], 
  [QlikViewCategoryLevel4Id] = Source.[QlikViewCategoryLevel4Id], 
  [QlikViewCategoryLevel3Name] = Source.[QlikViewCategoryLevel3Name], 
  [QlikViewCategoryLevel3Id] = Source.[QlikViewCategoryLevel3Id], 
  [MatchConfidence] = Source.[MatchConfidence]
when not matched by target then
 insert([ProductCategoryGroupId],[ProductCategoryId],[ProductCategoryName],[QlikViewCategoryLevel4Name],[QlikViewCategoryLevel4Id],[QlikViewCategoryLevel3Name],[QlikViewCategoryLevel3Id],[MatchConfidence])
 values(Source.[ProductCategoryGroupId],Source.[ProductCategoryId],Source.[ProductCategoryName],Source.[QlikViewCategoryLevel4Name],Source.[QlikViewCategoryLevel4Id],Source.[QlikViewCategoryLevel3Name],Source.[QlikViewCategoryLevel3Id],Source.[MatchConfidence])
when not matched by source then 
 delete
;
go
declare @mergeError int
 , @mergeCount int
select @mergeError = @@error, @mergeCount = @@rowcount
if @mergeError != 0
 begin
 print 'ERROR OCCURRED IN MERGE FOR [stg].[SSIS_BUDGET_ProductCategoryLookup]. Rows affected: ' + cast(@mergeCount as varchar(100)); -- SQL should always return zero rows affected
 end
else
 begin
 print '[stg].[SSIS_BUDGET_ProductCategoryLookup] rows affected by MERGE: ' + cast(@mergeCount as varchar(100));
 end
go

set nocount off
go
