--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

SET IDENTITY_INSERT [tsa].[JobsExecutionDetails] ON

MERGE INTO [tsa].[JobsExecutionDetails] AS Target
USING (VALUES
  (1,'RUN','MCT_M3TOSQLDB_FGINLI [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(2,'RUN','MCT_M3TOSQLDB_MPLIND [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(3,'RUN','MCT_M3TOSQLDB_SINGLE_CSYTAB [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(4,'RUN','MCT_M3TOSQLDB_MITMAS [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(5,'RUN','MCT_BAAN_TTDPUR000610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(6,'RUN','MCT_BAAN_TTDPUR001610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(7,'RUN','MCT_BAAN_TTDPUR002610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(8,'RUN','MCT_BAAN_TTDPUR010610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(9,'RUN','MCT_BAAN_TTDPUR011610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(10,'RUN','MCT_BAAN_TTDPUR020610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(11,'RUN','MCT_BAAN_TTDPUR021610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(12,'RUN','MCT_BAAN_TTDPUR027610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(13,'RUN','MCT_BAAN_TTDPUR028610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(14,'RUN','MCT_BAAN_TTDPUR030610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(15,'RUN','MCT_BAAN_TTDPUR031610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(16,'RUN','MCT_BAAN_TTDPUR032610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(17,'RUN','MCT_BAAN_TTDPUR033610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(18,'RUN','MCT_BAAN_TTDPUR034610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(19,'RUN','MCT_BAAN_TTDPUR035610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(20,'RUN','MCT_BAAN_TTDPUR036610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(21,'RUN','MCT_BAAN_TTDPUR037610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(22,'RUN','MCT_BAAN_TTDPUR040610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(23,'RUN','MCT_BAAN_TTDPUR041610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(24,'RUN','MCT_BAAN_TTDPUR042610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(25,'RUN','MCT_BAAN_TTDPUR043610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(26,'RUN','MCT_BAAN_TTDPUR045610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(27,'RUN','MCT_BAAN_TTDPUR046610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(28,'RUN','MCT_BAAN_TTDPUR047610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(29,'RUN','MCT_BAAN_TTDPUR048610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(30,'RUN','MCT_BAAN_TTDPUR050610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(31,'RUN','MCT_BAAN_TTDPUR051610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(32,'RUN','MCT_BAAN_TTDPUR053610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(33,'RUN','MCT_BAAN_TTDPUR054610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(34,'RUN','MCT_BAAN_TTDPUR061610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(35,'RUN','MCT_BAAN_TTDPUR080610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(36,'RUN','MCT_BAAN_TTDPUR081610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(37,'RUN','MCT_BAAN_TTDPUR082610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(38,'RUN','MCT_BAAN_TTDPUR300610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(39,'RUN','MCT_BAAN_TTDPUR301610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(40,'RUN','MCT_BAAN_TTDPUR302610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(41,'RUN','MCT_BAAN_TTDPUR303610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(42,'RUN','MCT_BAAN_TTDPUR305610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(43,'RUN','MCT_BAAN_TTDPUR306610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(44,'RUN','MCT_BAAN_TTDPUR310610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(45,'RUN','MCT_BAAN_TTDPUR332610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(46,'RUN','MCT_BAAN_TTDPUR333610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(47,'RUN','MCT_BAAN_TTDPUR335610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(48,'RUN','MCT_BAAN_TTDPUR336610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(49,'RUN','MCT_BAAN_TTDPUR400610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(50,'RUN','MCT_BAAN_TTDPUR401610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(51,'RUN','MCT_BAAN_TTDPUR703610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
 ,(52,'RUN','MCT_BAAN_TTDPUR704610 [MTT]',NULL,NULL,NULL,0,0,0,0,1)
) AS Source ([Id],[Action],[MCTName],[MCTStartTime],[MCTEndTime],[MCTTotalExecutionTime],[SuccessSourceRows],[SuccessTargetRows],[FailedSourceRows],[FailedTargetRows],[CDCNoOfIteration])
ON (Target.[Id] = Source.[Id])
WHEN MATCHED AND (
	NULLIF(Source.[Action], Target.[Action]) IS NOT NULL OR NULLIF(Target.[Action], Source.[Action]) IS NOT NULL OR 
	NULLIF(Source.[MCTName], Target.[MCTName]) IS NOT NULL OR NULLIF(Target.[MCTName], Source.[MCTName]) IS NOT NULL OR 
	NULLIF(Source.[MCTStartTime], Target.[MCTStartTime]) IS NOT NULL OR NULLIF(Target.[MCTStartTime], Source.[MCTStartTime]) IS NOT NULL OR 
	NULLIF(Source.[MCTEndTime], Target.[MCTEndTime]) IS NOT NULL OR NULLIF(Target.[MCTEndTime], Source.[MCTEndTime]) IS NOT NULL OR 
	NULLIF(Source.[MCTTotalExecutionTime], Target.[MCTTotalExecutionTime]) IS NOT NULL OR NULLIF(Target.[MCTTotalExecutionTime], Source.[MCTTotalExecutionTime]) IS NOT NULL OR 
	NULLIF(Source.[SuccessSourceRows], Target.[SuccessSourceRows]) IS NOT NULL OR NULLIF(Target.[SuccessSourceRows], Source.[SuccessSourceRows]) IS NOT NULL OR 
	NULLIF(Source.[SuccessTargetRows], Target.[SuccessTargetRows]) IS NOT NULL OR NULLIF(Target.[SuccessTargetRows], Source.[SuccessTargetRows]) IS NOT NULL OR 
	NULLIF(Source.[FailedSourceRows], Target.[FailedSourceRows]) IS NOT NULL OR NULLIF(Target.[FailedSourceRows], Source.[FailedSourceRows]) IS NOT NULL OR 
	NULLIF(Source.[FailedTargetRows], Target.[FailedTargetRows]) IS NOT NULL OR NULLIF(Target.[FailedTargetRows], Source.[FailedTargetRows]) IS NOT NULL OR 
	NULLIF(Source.[CDCNoOfIteration], Target.[CDCNoOfIteration]) IS NOT NULL OR NULLIF(Target.[CDCNoOfIteration], Source.[CDCNoOfIteration]) IS NOT NULL) THEN
 UPDATE SET
  [Action] = Source.[Action], 
  [MCTName] = Source.[MCTName], 
  [MCTStartTime] = Source.[MCTStartTime], 
  [MCTEndTime] = Source.[MCTEndTime], 
  [MCTTotalExecutionTime] = Source.[MCTTotalExecutionTime], 
  [SuccessSourceRows] = Source.[SuccessSourceRows], 
  [SuccessTargetRows] = Source.[SuccessTargetRows], 
  [FailedSourceRows] = Source.[FailedSourceRows], 
  [FailedTargetRows] = Source.[FailedTargetRows], 
  [CDCNoOfIteration] = Source.[CDCNoOfIteration]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Action],[MCTName],[MCTStartTime],[MCTEndTime],[MCTTotalExecutionTime],[SuccessSourceRows],[SuccessTargetRows],[FailedSourceRows],[FailedTargetRows],[CDCNoOfIteration])
 VALUES(Source.[Id],Source.[Action],Source.[MCTName],Source.[MCTStartTime],Source.[MCTEndTime],Source.[MCTTotalExecutionTime],Source.[SuccessSourceRows],Source.[SuccessTargetRows],Source.[FailedSourceRows],Source.[FailedTargetRows],Source.[CDCNoOfIteration])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [tsa].[JobsExecutionDetails]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[tsa].[JobsExecutionDetails] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [tsa].[JobsExecutionDetails] OFF
GO
SET NOCOUNT OFF
GO

